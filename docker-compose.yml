version: "3.3"

networks:
  web:
    external: true
  internal:
    external: false

services:
  traefik:
    image: traefik:${TRAEFIK_TAG}
    container_name: "${PROJECT_NAME}_traefik"
    command: -c /dev/null --web --docker --logLevel=INFO
    networks:
      - internal
      - web
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    links:
      - php
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.docker.network=web"


  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    networks:
      - internal
    ports:
      - 3306:3306
    labels:
      - traefik.enable=false
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      #      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - ./mysql:/var/lib/mysql:cached # Use bind mount
      - /tmp:/tmp:cached # Use bind mount

  adminer:
    container_name: "${PROJECT_NAME}_adminer"
    image: adminer:latest
    networks:
      - internal
      - web
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: $DB_HOST
      ADMINER_DEFAULT_DB_NAME: $DB_NAME
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
    depends_on:
      - mariadb
    restart: always
    #    ports:
    #      - 8080:8080
    labels:
      - "traefik.docker.network=web"
      - 'traefik.backend=${PROJECT_NAME}_adminer'
      - 'traefik.port=8080'
      - 'traefik.frontend.rule=Host:adminer.${PROJECT_BASE_URL}'

  php:
    image: wodby/php:latest
    container_name: "${PROJECT_NAME}_php"
    user: ${UID}
#    ports: # !!! ports is a bad idea if you use traefik
#      - 88:80
    networks:
      - internal
      - web
    depends_on:
      - mariadb
    environment:
      APP_ENV: dev
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      COLUMNS: 80 # Set 80 columns for docker exec -it.
      ## Read instructions at https://wodby.com/stacks/drupal/docs/local/xdebug/
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
      PHP_IDE_CONFIG: serverName=my-ide
      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ & Linux/Mac/Win
    #      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux, Docker < 18.03
    #      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
    #      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
    volumes:
      - ./:/var/www/html:cached

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    networks:
      - internal
      - web
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/web/
      NGINX_CONF_INCLUDE: /var/www/html/nginx/*.conf

    #      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./:/var/www/html:cached
    #      - type: bind
    #        source: ./nginx
    #        target: /etc/nginx/conf.d
    #        read_only: true
    # For macOS users (https://wodby.com/stacks/drupal/docs/local/docker-for-mac/)
    #      - ./:/var/www/html:cached # User-guided caching
    #      - docker-sync:/var/www/html # Docker-sync
    labels:
      - "traefik.docker.network=web"
      - 'traefik.backend=${PROJECT_NAME}_nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:www.${PROJECT_BASE_URL}'

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=${PROJECT_NAME}_portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${PROJECT_BASE_URL}'

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - 'traefik.backend=${PROJECT_NAME}_mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.${PROJECT_BASE_URL}'
